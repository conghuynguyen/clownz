{"version":3,"sources":["routesDom/Page/CartProduct/CartItems.js","routesDom/Page/CartProduct/CheckOut.js","routesDom/Page/CartProduct/index.js"],"names":["formatter","Intl","NumberFormat","CartItems","dataCart","setVisible","token","actionDeleteCart","actionUpdateCartProduct","history","useHistory","totalSumCart","onUpdateQuantity","index","quantity","length","className","map","card","cart","onClick","deleteCart","placement","title","src","product","poster","alt","_id","to","key","name","size","format","price","showTotalAmount","push","Option","Select","formItemLayout","labelCol","xs","span","sm","lg","xl","wrapperCol","CheckOut","visible","useState","useEffect","actionToCarAPI","loadingPostCartAPI","TextArea","Input","Form","useForm","form","city","setCity","district","setDistrict","initialOptions","amount","setAmount","type","setType","thongtindonhang","setThongtindonhang","resetFields","ButtonCOD","ButtonPayPal","options","fundingSource","undefined","createOrder","data","actions","order","create","purchase_units","currency_code","value","then","orderId","onApprove","capture","width","onClose","onFinish","tinhUSD","toFixed","commune","incubation","numberPhone","payment","cartInformation","address","phone","totalSum","Item","label","hasFeedback","rules","required","message","showSearch","placeholder","optionFilterProp","onChange","City","filterOption","input","option","children","toLowerCase","indexOf","dataCity","District","itemCity","huyen","xa","sort","maxLength","rows","min","max","htmlType","CartProduct","document","querySelector","innerHTML","dispatch","useDispatch","state","useContext","UserContext","useSelector","window","scrollTo","top","behavior","updateCartProduct","deleteCartProduct","postCartAPI","FileTextOutlined","style","fontSize","margin"],"mappings":"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","file":"static/js/22.b10fbd8e.chunk.js","sourcesContent":["import { Link, useHistory } from 'react-router-dom';\nimport { Tooltip } from 'antd';\nconst formatter = new Intl.NumberFormat('vn');\nexport default function CartItems({\n  dataCart,\n  setVisible,\n  token,\n  actionDeleteCart,\n  actionUpdateCartProduct,\n}) {\n  // const\n  const history = useHistory();\n  let totalSumCart = 0;\n  // function\n  const deleteCart = (index) => {\n    actionDeleteCart(index);\n  };\n  const onUpdateQuantity = (index, quantity) => {\n    const dataCart = {\n      index: index,\n      quantity: quantity,\n    };\n    if (quantity > 0) {\n      actionUpdateCartProduct(dataCart);\n    }\n  };\n  const totalSum = (cart) => {\n    return cart.product.price * cart.quantity;\n  };\n  const checkToken = () => {\n    if (token) {\n      setVisible(true);\n    } else {\n      history.push('/login');\n    }\n  };\n  const showTotalAmount = (cart) => {\n    if (cart.length > 0) {\n      for (let index = 0; index < cart.length; index++) {\n        totalSumCart += cart[index].product.price * cart[index].quantity;\n      }\n    }\n    return totalSumCart;\n  };\n  return (\n    dataCart.length > 0 && (\n      <div className=\"group-card-item\">\n        <div className=\"frames-card-item\">\n          {dataCart.map((card, index) => (\n            <div className=\"card-items\" key={index}>\n              <button\n                className=\"delete-item\"\n                onClick={() => {\n                  deleteCart(index);\n                }}\n              >\n                <Tooltip placement=\"right\" title=\"Xóa sản phẩm\">\n                  <i className=\"fa fa-trash-o\" />\n                </Tooltip>\n              </button>\n              <div className=\"card-image\">\n                <img src={card.product.poster} alt={card.product._id} title=\"Xem chi tiết\" />\n              </div>\n              <div className=\"card-name\">\n                <Link\n                  title=\"Xem chi tiết\"\n                  to={`/detail-products?id_product=${card.product._id}&key=${card.product.key}`}\n                >\n                  <p>\n                    {card.product.name} - <span>size {card.product.size}</span>\n                  </p>\n                </Link>\n              </div>\n              <div className=\"card-rice\">\n                <span>Giá</span>\n                <p>\n                  {formatter.format(card.product.price)} <u>đ</u>\n                </p>\n              </div>\n              <div className=\"card-quantity\">\n                <span>Số lượng</span>\n                <div className=\"quantity-number\">\n                  <button\n                    className=\"click-left\"\n                    onClick={() => {\n                      onUpdateQuantity(index, card.quantity - 1);\n                    }}\n                  >\n                    -\n                  </button>\n                  <div>{card.quantity}</div>\n                  <button\n                    className=\"click-right\"\n                    onClick={() => {\n                      onUpdateQuantity(index, card.quantity + 1);\n                    }}\n                    onClick={() =>\n                      card.quantity < 5 ? onUpdateQuantity(index, card.quantity + 1) : card.quantity\n                    }\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n              <p className=\"total-sum\">\n                Tổng cộng: {formatter.format(totalSum(card))} <u>đ</u>{' '}\n              </p>\n            </div>\n          ))}\n        </div>\n        <div className=\"card-total-money\">\n          <div className=\"total-money\">\n            <h3>Thành tiền</h3>\n            <div className=\"group-total-money\">\n              <p>\n                {formatter.format(showTotalAmount(dataCart))} <u>đ</u>\n              </p>\n              <span>(Đã bao gồm VAT nếu có)</span>\n            </div>\n            <button className=\"check-out\" onClick={checkToken}>\n              Tiến hành đặt hàng\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  );\n}\n","import { Drawer, Button, Form, Input, Select, InputNumber } from 'antd';\nimport { PayPalButtons, PayPalScriptProvider } from '@paypal/react-paypal-js';\nimport dataCity from 'data.json';\nimport Loading from 'component/LoadingPage/index';\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 24,\n    },\n    lg: {\n      span: 24,\n    },\n    xl: {\n      span: 24,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 0,\n    },\n    sm: {\n      span: 24,\n    },\n  },\n};\nexport default function CheckOut({\n  visible,\n  setVisible,\n  useState,\n  useEffect,\n  dataCart,\n  actionToCarAPI,\n  token,\n  loadingPostCartAPI,\n}) {\n  const { TextArea } = Input;\n  const [form] = Form.useForm();\n  // create state\n  const [city, setCity] = useState('');\n  const [district, setDistrict] = useState('');\n  // function\n  const onChangeCity = (City) => {\n    setCity(City);\n  };\n  const onChangeDistrict = (District) => {\n    setDistrict(District);\n  };\n\n  // cho nay init paypal\n  const initialOptions = {\n    'client-id': 'Aeuphynkq8ate32HVXQjqPfsFp5RNF7dBSXicHOU4Wj_a5Vel039SzgH2f2iqwFvP_HNey0whyfxVjXO',\n  };\n  const [amount, setAmount] = useState(0);\n  const currency = 'USD';\n\n  const [type, setType] = useState('');\n  const [thongtindonhang, setThongtindonhang] = useState({});\n  const checkOutCart = (value) => {\n    let totalSumCart = 0;\n    if (dataCart.length > 0) {\n      for (let index = 0; index < dataCart.length; index++) {\n        totalSumCart += dataCart[index].product.price * dataCart[index].quantity;\n      }\n    }\n    let tinhUSD = (totalSumCart / 23000).toFixed(2);\n    const { city, district, commune, incubation, numberPhone, payment } = value;\n    const cartInformation = {\n      address: `${incubation} - ${commune} - ${district} - ${city}`,\n      phone: numberPhone,\n      totalSum: totalSumCart,\n      cart: dataCart,\n      payment: payment,\n    };\n    setType(payment);\n    setThongtindonhang(cartInformation);\n    setAmount(tinhUSD);\n    //actionToCarAPI(cartInformation, token);\n  };\n  const huyy = () => {\n    setType('');\n  };\n  // END\n\n  /// EEND\n  useEffect(() => {\n    form.resetFields(['district']);\n    form.resetFields(['commune']);\n  }, [city]);\n  useEffect(() => {\n    form.resetFields(['commune']);\n  }, [district]);\n\n  // lua chon nut thanh toan\n  const ButtonCOD = () => {\n    const onlick = () => {\n      actionToCarAPI(thongtindonhang, token);\n    };\n    return (\n      <Button type=\"primary\" onClick={onlick}>\n        Xác nhận thanh toán COD\n      </Button>\n    );\n  };\n  const ButtonPayPal = () => {\n    return (\n      <PayPalScriptProvider options={initialOptions}>\n        <PayPalButtons\n          fundingSource={undefined}\n          createOrder={(data, actions) => {\n            return actions.order\n              .create({\n                purchase_units: [\n                  {\n                    amount: {\n                      currency_code: currency,\n                      value: amount,\n                    },\n                  },\n                ],\n              })\n              .then((orderId) => {\n                // Your code here after create the order\n                return orderId;\n              });\n          }}\n          onApprove={function (data, actions) {\n            return actions.order.capture().then(function () {\n              // Your code here after capture the order\n              actionToCarAPI(thongtindonhang, token);\n            });\n          }}\n        />\n      </PayPalScriptProvider>\n    );\n  };\n  return (\n    <>\n      {loadingPostCartAPI && <Loading />}\n      <div className=\"group-check-out\">\n        {!loadingPostCartAPI && (\n          <Drawer\n            title=\"Thông tin nhận hàng\"\n            width={500}\n            onClose={() => setVisible(false)}\n            visible={visible}\n            className=\"container-checkout\"\n          >\n            <Form {...formItemLayout} form={form} onFinish={checkOutCart}>\n              <Form.Item\n                name=\"city\"\n                label=\"Tỉnh/Thành phố\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng chọn tỉnh hoặc thành phố bạn ở !',\n                  },\n                ]}\n              >\n                <Select\n                  showSearch\n                  placeholder=\"Tỉnh/Thành phố\"\n                  optionFilterProp=\"children\"\n                  onChange={onChangeCity}\n                  filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {dataCity.map((city, index) => (\n                    <Option value={city.name} key={index}>\n                      {city.name}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"district\"\n                label=\"Quận/Huyện\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng chọn quận hoặc huyện nơi bạn !',\n                  },\n                ]}\n              >\n                <Select\n                  showSearch\n                  placeholder=\"Quận/Huyện\"\n                  optionFilterProp=\"children\"\n                  onChange={onChangeDistrict}\n                  filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {dataCity.map(\n                    (itemCity, index) =>\n                      itemCity.name === city &&\n                      itemCity.huyen.map((huyen) => (\n                        <Option value={huyen.name} key={index}>\n                          {huyen.name}\n                        </Option>\n                      ))\n                  )}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"commune\"\n                label=\"Xã/Thị Trấn\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng chọn xã bạn ở !',\n                  },\n                ]}\n              >\n                <Select\n                  showSearch\n                  placeholder=\"Xã/Thị Trấn\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {dataCity.map(\n                    (itemCity) =>\n                      itemCity.name === city &&\n                      itemCity.huyen.map(\n                        (huyen) =>\n                          huyen.name === district &&\n                          huyen.xa.sort().map((xa, index) => (\n                            <Option value={xa.name} key={index}>\n                              {xa.name}\n                            </Option>\n                          ))\n                      )\n                  )}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"incubation\"\n                label=\"Ấp/Số Nhà/Tên Đường\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Địa chỉ cụ thể !',\n                  },\n                ]}\n              >\n                <TextArea\n                  maxLength={150}\n                  placeholder=\"địa chỉ cụ thể: ấp, số nhà, tên đường...\"\n                  rows={4}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"numberPhone\"\n                label=\"Số Điện Thoại\"\n                className=\"group-phone\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng nhập đúng số điện thoại !',\n                  },\n                ]}\n              >\n                <InputNumber min={0} type=\"number\" max={999999999999} />\n              </Form.Item>\n\n              <Form.Item\n                name=\"payment\"\n                label=\"Thanh toán\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng chọn phuong thức thanh toán',\n                  },\n                ]}\n              >\n                <Select onChange={huyy}>\n                  <Option value=\"COD\">Thanh toán khi nhận hàng</Option>\n                  <Option value=\"paypal\">Thanh toán bằng Paypal</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"btn-register\">\n                  KIỂM TRA\n                </Button>\n              </Form.Item>\n            </Form>\n            {type === 'COD' && <ButtonCOD />}\n            {type === 'paypal' && <ButtonPayPal />}\n          </Drawer>\n        )}\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FileTextOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n//dispatch\nimport { deleteCartProduct, updateCartProduct } from \"features/Cart/CartSlice\";\nimport { postCartAPI } from \"features/Cart/pathAPI\";\n// --Contexts\nimport { UserContext } from \"contexts/UserContext\";\n// Component\nimport CartItems from \"./CartItems\";\nimport CheckOut from \"./CheckOut\";\n// --CSS\nimport \"./style.css\";\nexport default function CartProduct() {\n  document.querySelector(\"title\").innerHTML = \"Giỏ hàng\";\n  const dispatch = useDispatch();\n\n  // dispatch API\n  const actionToCarAPI = (data, token) => dispatch(postCartAPI(data, token));\n  const actionDeleteCart = (index) => dispatch(deleteCartProduct(index));\n  const actionUpdateCartProduct = (dataCart) =>\n    dispatch(updateCartProduct(dataCart));\n  // --Contexts\n  const state = useContext(UserContext);\n  const [token,] = state.token;\n  // create state\n  const [visible, setVisible] = useState(false);\n  // store\n  const dataCart = useSelector((state) => state.cart.dataCart);\n  const loadingPostCartAPI = useSelector((state) => state.cart.loadingPostCartAPI);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n  return (\n    <div className=\"container-card\">\n      <div className=\"group-card\">\n        <h3>\n          GIỎ HÀNG <span>({dataCart.length} sản phẩm)</span>\n        </h3>\n        <CartItems\n          setVisible={setVisible}\n          dataCart={dataCart}\n          token={token}\n          actionUpdateCartProduct={actionUpdateCartProduct}\n          actionDeleteCart={actionDeleteCart}\n        />\n        {dataCart.length > 0 && (\n          <CheckOut\n            visible={visible}\n            loadingPostCartAPI={loadingPostCartAPI}\n            setVisible={setVisible}\n            useState={useState}\n            useEffect={useEffect}\n            dataCart={dataCart}\n            actionToCarAPI={actionToCarAPI}\n            token={token}\n          />\n        )}\n        {dataCart.length === 0 && (\n          <div className=\"no-data-cart\">\n            <FileTextOutlined\n              style={{\n                fontSize: \"2em\",\n                margin: \"15px auto\",\n              }}\n            />\n            <h3>Không có sản phẩm nào trong giỏ hàng của bạn.</h3>\n            <Link to=\"/\">Tiếp tục mua sắm</Link>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}