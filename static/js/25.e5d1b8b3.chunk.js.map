{"version":3,"sources":["routesDom/Page/Register/index.js"],"names":["tokenLocal","localStorage","getItem","document","querySelector","innerHTML","formItemLayout","labelCol","xs","span","sm","lg","xl","Register","history","useHistory","Form","useForm","form","dispatch","useDispatch","loadingSubmit","useSelector","state","user","loadingSlice","useEffect","push","window","scrollTo","top","behavior","getElementById","addEventListener","e","email","target","value","toLowerCase","setFieldsValue","onFinish","values","a","data","name","trim","password","account","registerUser","className","Item","label","rules","max","message","type","required","hasFeedback","id","placeholder","min","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","pattern","whitespace","shouldUpdate","loading","htmlType","disabled","isFieldsTouched","getFieldsError","filter","errors","length","to"],"mappings":"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","file":"static/js/25.e5d1b8b3.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\n// dispatch AP\nimport { registerUser } from 'features/User/patchAPI';\nimport './style.css';\nconst tokenLocal = localStorage.getItem('token');\ndocument.querySelector('title').innerHTML = 'Đăng Ký';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 24,\n    },\n    lg: {\n      span: 24,\n    },\n    xl: {\n      span: 24,\n    },\n  },\n};\nexport default function Register() {\n  const history = useHistory();\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const actionRegisterAccount = (account) => dispatch(registerUser(account));\n  //store\n  const loadingSubmit = useSelector((state) => state.user.loadingSlice);\n  //useEffect\n  useEffect(() => {\n    if (tokenLocal) {\n      history.push('/');\n    }\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n    document.getElementById('email-register').addEventListener('blur', (e) => {\n      let email = e.target.value.toLowerCase();\n      form.setFieldsValue({ email: email });\n    });\n  }, []);\n  //function\n  const onFinish = async (values) => {\n    const data = {\n      name: values.name,\n      email: values.email.toLowerCase().trim(),\n      password: values.password,\n    };\n    if (values) {\n      actionRegisterAccount(data);\n    }\n  };\n\n  return (\n    <div className=\"group-register\">\n      <div className=\"main-register\">\n        <div className=\"container-register\">\n          <h3>Đăng Ký</h3>\n          <Form {...formItemLayout} form={form} onFinish={onFinish} className=\"form-register\">\n            <Form.Item\n              label=\"Email\"\n              className=\"input-email\"\n              name=\"email\"\n              rules={[\n                {\n                  max: 50,\n                  message: 'E-mail quá dài!',\n                },\n                {\n                  type: 'email',\n                  message: 'Đầu vào không hợp lệ E-mail !',\n                },\n                {\n                  required: true,\n                  message: 'Vui lòng nhập đúng E-mail !',\n                },\n              ]}\n              hasFeedback\n            >\n              <Input id=\"email-register\" className=\"height-min\" placeholder=\"Nhập email\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Mật khẩu\"\n              className=\"input-password\"\n              name=\"password\"\n              rules={[\n                {\n                  min: 8,\n                  message: 'Mật khẩu quá ngắn ít nhất 8 ký tự !',\n                },\n                {\n                  required: true,\n                  type: 'string',\n                  message: 'Vui lòng nhập mật khẩu của bạn !',\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.Password className=\"height-min\" placeholder=\"Nhập mật khẩu\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Nhập lại mật khẩu\"\n              name=\"confirm\"\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Vui lòng xác nhận lại mật khẩu !',\n                  type: 'string',\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject('Mật khẩu bạn đã nhập không khớp !');\n                  },\n                }),\n              ]}\n            >\n              <Input.Password placeholder=\"Nhận lại mật khẩu\" className=\"height-min\" />\n            </Form.Item>\n            <Form.Item\n              name=\"name\"\n              label=\"Họ và tên\"\n              pattern={[/^[a-z0-9]+$/]}\n              rules={[\n                {\n                  required: true,\n                  message: 'Nhập đầy đủ tên bạn !',\n                  whitespace: true,\n                  type: 'string',\n                },\n                {\n                  min: 1,\n                  max: 25,\n                  message: 'Vui lòng nhập đúng tên của bạn !',\n                },\n              ]}\n            >\n              <Input placeholder=\"Nhập họ và tên\" className=\"height-min\" />\n            </Form.Item>\n            <div className=\"group-register-link\">\n              <Form.Item shouldUpdate={true}>\n                {() => (\n                  <Button\n                    loading={loadingSubmit}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"btn-register\"\n                    disabled={\n                      !form.isFieldsTouched(true) ||\n                      form.getFieldsError().filter(({ errors }) => errors.length).length\n                    }\n                  >\n                    Đăng ký\n                  </Button>\n                )}\n              </Form.Item>\n            </div>\n          </Form>\n          <div className=\"connect-link\">\n            <p>Bạn đã có tài khoản đăng nhập ngay </p>\n            <Link to=\"/login\" className=\"Login-form\">\n              tại đây\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}