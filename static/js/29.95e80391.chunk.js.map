{"version":3,"sources":["routesDom/Page/Register/ActiveEmail.js"],"names":["tokenLocal","localStorage","getItem","ActiveEmail","history","useHistory","dispatch","useDispatch","accessToken","useParams","state","useContext","UserContext","token","setToken","setUser","user","setIdUser","idUser","patchCart","loading","useSelector","loadingSlice","useEffect","a","push","postActiveEmail","actionResult","currentUser","unwrapResult","_id"],"mappings":"oPAUMA,EAAaC,aAAaC,QAAQ,SACzB,SAASC,IACtB,IAAMC,EAAUC,cACVC,EAAWC,cACTC,EAAgBC,cAAhBD,YACFE,EAAQC,qBAAWC,KAEzB,cAA0BF,EAAMG,MAAhC,GAAOA,EAAP,KAAcC,EAAd,KACSC,EAAT,YAAoBL,EAAMM,KAA1B,MACSC,EAAT,YAAsBP,EAAMQ,OAA5B,MACOC,EAAP,YAAoBT,EAAMS,UAA1B,MACMC,EAAUC,aAAY,SAACX,GAAD,OAAWA,EAAMM,KAAKM,gBAkBlD,OAhBAC,oBAAS,sBAAC,8BAAAC,EAAA,yDACJX,GAASM,EACXf,EAAQqB,KAAKN,IACJnB,GAAca,IACvBT,EAAQqB,KAAK,MAEXjB,EANI,gCAOqBF,EAASoB,YAAgB,CAAElB,YAAaA,KAP7D,OAOAmB,EAPA,QAQAC,EAAcC,YAAaF,MAE/Bb,EAASc,EAAYf,OACrBE,EAAQa,EAAYZ,MACpBC,EAAUW,EAAYZ,KAAKc,MAZvB,2CAeP,CAACtB,EAAaK,IACV,mCAAGO,GAAW,cAAC,IAAD","file":"static/js/29.95e80391.chunk.js","sourcesContent":["import { useContext, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\n// dispatch AP\nimport { postActiveEmail } from 'features/User/patchAPI';\n// context\nimport { UserContext } from 'contexts/UserContext';\n// component\nimport LoadingPage from 'loading/index';\nconst tokenLocal = localStorage.getItem('token');\nexport default function ActiveEmail() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { accessToken } = useParams();\n  const state = useContext(UserContext);\n  // create\n  const [token, setToken] = state.token;\n  const [, setUser] = state.user;\n  const [, setIdUser] = state.idUser;\n  const [patchCart] = state.patchCart;\n  const loading = useSelector((state) => state.user.loadingSlice);\n  //useEffect\n  useEffect(async () => {\n    if (token && patchCart) {\n      history.push(patchCart);\n    } else if (tokenLocal || token) {\n      history.push('/');\n    }\n    if (accessToken) {\n      const actionResult = await dispatch(postActiveEmail({ accessToken: accessToken }));\n      const currentUser = unwrapResult(actionResult);\n      if (currentUser) {\n        setToken(currentUser.token);\n        setUser(currentUser.user);\n        setIdUser(currentUser.user._id);\n      }\n    }\n  }, [accessToken, token]);\n  return <>{loading && <LoadingPage />}</>;\n}\n"],"sourceRoot":""}